RFC Commandes LS, FIND et AWK
=============================

### 1. Introduction
Ce document fournit une liste d’utilisation des commandes `ls`, `find` et `awk`, organisées de manière progressive. Ces outils permettent de manipuler, rechercher et transformer des données sous Linux de manière efficace.

### 2. Commandes LS

#### 2.1 Liste de base
- `ls` : Liste les fichiers et répertoires du répertoire courant.
  - Exemple : `ls`

#### 2.2 Options utiles
- `ls -l` : Affiche les fichiers avec des détails (permissions, propriétaire, taille, date).
- `ls -a` : Affiche les fichiers, y compris les fichiers cachés (commençant par `.`).
- `ls -lh` : Affiche les tailles de fichiers dans un format lisible (ko, Mo, etc.).
- `ls -t` : Trie les fichiers par date de modification, les plus récents en premier.
- `ls -R` : Liste de manière récursive les sous-répertoires.
- `ls -S` : Trie les fichiers par taille (du plus grand au plus petit).

#### 2.3 Combinaisons
- `ls -alh` : Combine plusieurs options pour afficher tous les fichiers avec des détails dans un format lisible.
- `ls /chemin/vers/repertoire` : Spécifie un répertoire différent.

### 3. Commandes FIND

#### 3.1 Recherche de fichiers
- `find /chemin -name "nom_du_fichier"` : Recherche des fichiers ou répertoires par nom.
  - Exemple : `find /var -name "*.log"`

#### 3.2 Recherche insensible à la casse
- `find /chemin -iname "nom_du_fichier"` : Recherche sans tenir compte des majuscules/minuscules.
  - Exemple : `find . -iname "readme.md"`

#### 3.3 Recherche par type
- `find /chemin -type d` : Recherche uniquement des répertoires.
  - Exemple : `find /etc -type d`
- `find /chemin -type f` : Recherche uniquement des fichiers.
  - Exemple : `find . -type f -name "*.txt"`

#### 3.4 Recherche par taille
- `find /chemin -size +1M` : Recherche des fichiers de plus de 1 Mo.
  - Exemple : `find /home -size -10k` (fichiers de moins de 10 ko).

#### 3.5 Exécution d’une commande sur les fichiers trouvés
- `find /chemin -name "*.tmp" -exec rm {} \;` : Supprime tous les fichiers temporaires.
  - Exemple : `find /tmp -type f -exec chmod 644 {} \;`

#### 3.6 Recherche par date
- `find /chemin -mtime -7` : Recherche des fichiers modifiés au cours des 7 derniers jours.
  - Exemple : `find /var/log -mtime +30` (fichiers modifiés il y a plus de 30 jours).

### 4. Commandes AWK

#### 4.1 Base d’AWK
- `awk '{print $1}' fichier.txt` : Affiche la première colonne de chaque ligne.
  - Exemple : `ls -l | awk '{print $5}'` (affiche les tailles des fichiers).

#### 4.2 Filtrer les lignes
- `awk '/motif/ {print $0}' fichier.txt` : Affiche uniquement les lignes contenant le motif.
  - Exemple : `awk '/error/ {print $0}' log.txt`

#### 4.3 Calculs simples
- `awk '{sum+=$2} END {print sum}' fichier.txt` : Additionne les valeurs de la 2ème colonne.
  - Exemple : `ls -l | awk '{sum+=$5} END {print sum}'` (somme des tailles des fichiers).

#### 4.4 Modifications conditionnelles
- `awk '{if ($3 > 100) print $1, $3}' fichier.txt` : Affiche les valeurs si la condition est vraie.

#### 4.5 Réorganisation des colonnes
- `awk '{print $2, $1}' fichier.txt` : Inverse l’ordre des colonnes.

### 5. Combinaison des outils

#### 5.1 Trouver et afficher les tailles
- `find . -type f -exec ls -lh {} \; | awk '{print $9, $5}'` : Affiche le nom et la taille des fichiers trouvés.

#### 5.2 Trier les fichiers par taille avec AWK
- `ls -l | awk '{print $5, $9}' | sort -n` : Trie les fichiers par taille.

#### 5.3 Utilisation avancée de FIND et AWK
- `find /chemin -type f -exec ls -l {} \; | awk '{if ($5 > 1000000) print $9, $5}'` : Affiche les fichiers de plus de 1 Mo avec leur taille.

### Fin du RFC
